{"version":3,"sources":["screens/style.module.scss","components/PageErrorComponent.jsx","templetes/ScreenTemplete.jsx","components/MyInputsCompoenent/MyTextArea.jsx","screens/AboutScreen.jsx"],"names":["module","exports","PageErrorComponent","text","useSelector","state","colors","className","style","pageErrorComponent","color","size","ScreenTemplete","data","title","editHandler","children","isCreateButton","createHandler","action","isLoad","dispatch","useDispatch","useState","isLoading","setLoading","isError","setError","isAdmin","admin","screenBackground","primary","useEffect","a","init","LoadingComponent","component","icon","onClick","icon2","arrayText","split","length","textNode","i","push","textColorChanger","screenTempleteContainer","backgroundColor","MyTextInput","label","props","useField","field","meta","touched","error","myTextareaInputContainer","borderColor","warning","AboutScreen","React","isEditModel","setEditModel","editModalHandler","e","about","subTitle","description","cvPath","isAbout","load","initalValue","validationSchema","yup","min","max","required","submitHandler","values","setSubmitting","editAboutPageAction","createMessageAction","console","log","aboutFetchAction","aboutScreenContainer","clickHandler","window","open","closeHandler","initalValues","name","placeholder"],"mappings":"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","file":"static/js/3.04160aa6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutScreenContainer\":\"style_aboutScreenContainer__3UC0c\",\"subTitle\":\"style_subTitle__3Vftq\",\"description\":\"style_description__365Am\",\"skillScreenContainer\":\"style_skillScreenContainer__FXslf\",\"projectsScreenContainer\":\"style_projectsScreenContainer__22dLB\",\"contactScreen\":\"style_contactScreen__2RV21\",\"loginScreen\":\"style_loginScreen__3opmN\"};","import React from 'react';\r\nimport style from './style.module.scss';\r\nimport { IoCloudOffline } from 'react-icons/io5';\r\nimport { useSelector } from 'react-redux';\r\nexport default function PageErrorComponent() {\r\n  const { text } = useSelector((state) => state.colors);\r\n  return (\r\n    <div className={style.pageErrorComponent}>\r\n      <div style={{ color: text }}>\r\n        <IoCloudOffline size={80} color={text} />\r\n        <p>Something Went Wrong</p>\r\n        <p>Please check your Network Connection and Try again!</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport style from './style.module.scss';\r\nimport { BiEdit } from 'react-icons/bi';\r\nimport { IoMdAdd } from 'react-icons/io';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PageErrorComponent from '../components/PageErrorComponent';\r\nimport LoadingComponent from '../components/LoadingComponent';\r\nexport default function ScreenTemplete({\r\n  title,\r\n  editHandler,\r\n  children,\r\n  isCreateButton,\r\n  createHandler,\r\n  action,\r\n  isLoad,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [isError, setError] = useState(false);\r\n  const { isAdmin } = useSelector((state) => state.admin);\r\n  const { screenBackground, text, primary } = useSelector(\r\n    (state) => state.colors\r\n  );\r\n  function textColorChanger(text) {\r\n    if (!text) {\r\n      return;\r\n    }\r\n    let arrayText = text.split(' ');\r\n    if (arrayText.length <= 1) {\r\n      return (\r\n        <span className={style.title} style={{ color: primary }}>\r\n          {arrayText[0]}\r\n        </span>\r\n      );\r\n    } else {\r\n      let textNode = [];\r\n      for (let i = 0; i < arrayText.length - 1; i++) {\r\n        textNode.push(arrayText[i]);\r\n        textNode.push(' ');\r\n      }\r\n      textNode.push(\r\n        <span style={{ color: primary }} key='1'>\r\n          {arrayText[arrayText.length - 1]}\r\n        </span>\r\n      );\r\n      return <span className={style.title}>{textNode}</span>;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!action) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    const init = async () => {\r\n      try {\r\n        setError(false);\r\n        setLoading(true);\r\n        await dispatch(action());\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setError(true);\r\n      }\r\n    };\r\n    if (!isLoad) {\r\n      init();\r\n    }\r\n  }, [action, dispatch, isLoad]);\r\n\r\n  let data;\r\n  if (isLoading) {\r\n    data = <LoadingComponent />;\r\n  } else if (!isLoading && isError) {\r\n    data = <PageErrorComponent />;\r\n  } else {\r\n    data = (\r\n      <div className={style.component}>\r\n        {isAdmin && (\r\n          <div>\r\n            <BiEdit className={style.icon} onClick={editHandler} size={30} />\r\n            {isCreateButton && (\r\n              <IoMdAdd\r\n                className={style.icon2}\r\n                onClick={createHandler}\r\n                size={30}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n        <div>{textColorChanger(title)}</div>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={style.screenTempleteContainer}\r\n      style={{\r\n        color: text,\r\n        backgroundColor: screenBackground,\r\n      }}>\r\n      {data}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useField } from 'formik';\r\nimport style from './style.module.scss';\r\nimport { useSelector } from 'react-redux';\r\nexport default function MyTextInput({ label, ...props }) {\r\n  const [field, meta] = useField(props);\r\n  const colors = useSelector((state) => state.colors);\r\n  const isError = meta.touched && meta.error;\r\n  return (\r\n    <div\r\n      className={style.myTextareaInputContainer}\r\n      style={{ color: colors.text }}>\r\n      <label>\r\n        {label && <span>{label}</span>}\r\n        <textarea\r\n          style={{ borderColor: isError ? colors.warning : 'gray' }}\r\n          {...field}\r\n          {...props}\r\n        />\r\n      </label>\r\n      {isError && (\r\n        <span style={{ color: colors.warning }} className={style.error}>\r\n          {meta.error}\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ScreenTemplete from '../templetes/ScreenTemplete';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ButtonAssets from '../assets/ButtonAssets';\r\nimport style from './style.module.scss';\r\nimport ModelComponent from '../components/FormModelComponent';\r\nimport MyTextInput from '../components/MyInputsCompoenent/MyTextInput';\r\nimport MyTextArea from '../components/MyInputsCompoenent/MyTextArea';\r\nimport * as yup from 'yup';\r\nimport {\r\n  editAboutPageAction,\r\n  aboutFetchAction,\r\n} from '../store/actions/AdminActions';\r\nimport { createMessageAction } from '../store/actions/MessageActions';\r\n\r\nexport default function AboutScreen() {\r\n  const [isEditModel, setEditModel] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n  const editModalHandler = () => {\r\n    setEditModel((e) => !e);\r\n    return;\r\n  };\r\n  const { title, subTitle, description, cvPath } = useSelector(\r\n    (state) => state.admin.about\r\n  );\r\n  const { isAbout } = useSelector((state) => state.load);\r\n  const initalValue = {\r\n    title: title ? title : '',\r\n    subTitle: subTitle ? subTitle : '',\r\n    description: description ? description : '',\r\n    cvPath: cvPath ? cvPath : '',\r\n  };\r\n  const validationSchema = yup.object({\r\n    title: yup.string().min(4).max(100).required(),\r\n    subTitle: yup.string().min(4).max(100).required(),\r\n    description: yup.string().min(4).max(500).required(),\r\n    cvPath: yup.string().required(),\r\n  });\r\n  const submitHandler = async (values, { setSubmitting }) => {\r\n    try {\r\n      setSubmitting(true);\r\n      await dispatch(editAboutPageAction(values));\r\n      dispatch(createMessageAction('Successfully Updated!', 'warning'));\r\n      setSubmitting(false);\r\n    } catch (error) {\r\n      setSubmitting(false);\r\n      console.log(error);\r\n      dispatch(createMessageAction('Something went wrong!', 'error'));\r\n    }\r\n  };\r\n  return (\r\n    <ScreenTemplete\r\n      title={title}\r\n      isLoad={isAbout}\r\n      editHandler={editModalHandler}\r\n      action={aboutFetchAction}>\r\n      <div className={style.aboutScreenContainer}>\r\n        <p className={style.subTitle}>{subTitle}</p>\r\n        <p className={style.description}>{description}</p>\r\n        <ButtonAssets\r\n          title='View My CV'\r\n          clickHandler={() => {\r\n            window.open(cvPath, '_blank');\r\n          }}\r\n        />\r\n      </div>\r\n      {isEditModel && (\r\n        <ModelComponent\r\n          title='Edit Page'\r\n          closeHandler={editModalHandler}\r\n          initalValues={initalValue}\r\n          validationSchema={validationSchema}\r\n          submitHandler={submitHandler}>\r\n          {() => {\r\n            return (\r\n              <>\r\n                <MyTextInput\r\n                  name='title'\r\n                  label='Title'\r\n                  placeholder='Enter Title'\r\n                />\r\n                <MyTextInput\r\n                  name='subTitle'\r\n                  label='Sub Title'\r\n                  placeholder='Enter Sub-Title'\r\n                />\r\n                <MyTextInput\r\n                  name='cvPath'\r\n                  label='CV Path'\r\n                  placeholder='Enter CV Path'\r\n                />\r\n                <MyTextArea\r\n                  name='description'\r\n                  label='Description'\r\n                  placeholder='Enter Description'\r\n                />\r\n              </>\r\n            );\r\n          }}\r\n        </ModelComponent>\r\n      )}\r\n    </ScreenTemplete>\r\n  );\r\n}\r\n"],"sourceRoot":""}