{"version":3,"sources":["components/PageErrorComponent.jsx","templetes/ScreenTemplete.jsx","components/EducationDetailsCompoent.jsx","screens/EducationScreen.jsx"],"names":["PageErrorComponent","text","useSelector","state","colors","className","style","pageErrorComponent","color","size","ScreenTemplete","data","title","editHandler","children","isCreateButton","createHandler","action","isLoad","dispatch","useDispatch","useState","isLoading","setLoading","isError","setError","isAdmin","admin","screenBackground","primary","useEffect","a","init","LoadingComponent","component","icon","onClick","icon2","arrayText","split","length","textNode","i","push","textColorChanger","screenTempleteContainer","backgroundColor","ModelComponent","lazy","EducationDetailsCompoent","course","validationSchema","updateHandler","deleteHandler","React","isUpdateModel","setUpdateModel","updateModelHandler","e","educationInitalValue","name","place","year","branch","_id","educationContainer","warning","closeHandler","initalValues","submitHandler","MyTextInput","label","placeholder","EducationScreen","isPageEdit","setPageEdit","isCreateModel","setCreateModel","education","isEducation","load","pageValue","yup","min","max","required","pageValidationSchema","pageModelToggler","createModelToggler","pageSubmitHandler","values","setSubmitting","editEducationTitlePageAction","createMessageAction","console","log","createEducationAction","editEducationAction","response","id","window","confirm","deleteEducationAction","fallback","educationFetchAction","map"],"mappings":"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","file":"static/js/8.0a6dc0d1.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './style.module.scss';\r\nimport { IoCloudOffline } from 'react-icons/io5';\r\nimport { useSelector } from 'react-redux';\r\nexport default function PageErrorComponent() {\r\n  const { text } = useSelector((state) => state.colors);\r\n  return (\r\n    <div className={style.pageErrorComponent}>\r\n      <div style={{ color: text }}>\r\n        <IoCloudOffline size={80} color={text} />\r\n        <p>Something Went Wrong</p>\r\n        <p>Please check your Network Connection and Try again!</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport style from './style.module.scss';\r\nimport { BiEdit } from 'react-icons/bi';\r\nimport { IoMdAdd } from 'react-icons/io';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PageErrorComponent from '../components/PageErrorComponent';\r\nimport LoadingComponent from '../components/LoadingComponent';\r\nexport default function ScreenTemplete({\r\n  title,\r\n  editHandler,\r\n  children,\r\n  isCreateButton,\r\n  createHandler,\r\n  action,\r\n  isLoad,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [isError, setError] = useState(false);\r\n  const { isAdmin } = useSelector((state) => state.admin);\r\n  const { screenBackground, text, primary } = useSelector(\r\n    (state) => state.colors\r\n  );\r\n  function textColorChanger(text) {\r\n    if (!text) {\r\n      return;\r\n    }\r\n    let arrayText = text.split(' ');\r\n    if (arrayText.length <= 1) {\r\n      return (\r\n        <span className={style.title} style={{ color: primary }}>\r\n          {arrayText[0]}\r\n        </span>\r\n      );\r\n    } else {\r\n      let textNode = [];\r\n      for (let i = 0; i < arrayText.length - 1; i++) {\r\n        textNode.push(arrayText[i]);\r\n        textNode.push(' ');\r\n      }\r\n      textNode.push(\r\n        <span style={{ color: primary }} key='1'>\r\n          {arrayText[arrayText.length - 1]}\r\n        </span>\r\n      );\r\n      return <span className={style.title}>{textNode}</span>;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!action) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    const init = async () => {\r\n      try {\r\n        setError(false);\r\n        setLoading(true);\r\n        await dispatch(action());\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setError(true);\r\n      }\r\n    };\r\n    if (!isLoad) {\r\n      init();\r\n    }\r\n  }, [action, dispatch, isLoad]);\r\n\r\n  let data;\r\n  if (isLoading) {\r\n    data = <LoadingComponent />;\r\n  } else if (!isLoading && isError) {\r\n    data = <PageErrorComponent />;\r\n  } else {\r\n    data = (\r\n      <div className={style.component}>\r\n        {isAdmin && (\r\n          <div>\r\n            <BiEdit className={style.icon} onClick={editHandler} size={30} />\r\n            {isCreateButton && (\r\n              <IoMdAdd\r\n                className={style.icon2}\r\n                onClick={createHandler}\r\n                size={30}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n        <div>{textColorChanger(title)}</div>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={style.screenTempleteContainer}\r\n      style={{\r\n        color: text,\r\n        backgroundColor: screenBackground,\r\n      }}>\r\n      {data}\r\n    </div>\r\n  );\r\n}\r\n","import React, { lazy } from 'react';\r\nimport style from './style.module.scss';\r\nimport { AiOutlineDelete, AiOutlineEdit } from 'react-icons/ai';\r\nimport MyTextInput from './MyInputsCompoenent/MyTextInput';\r\nconst ModelComponent = lazy(() => import('../components/FormModelComponent'));\r\nexport default function EducationDetailsCompoent({\r\n  course,\r\n  isAdmin,\r\n  colors,\r\n  validationSchema,\r\n  updateHandler,\r\n  deleteHandler,\r\n}) {\r\n  const [isUpdateModel, setUpdateModel] = React.useState(false);\r\n  const updateModelHandler = () => {\r\n    return setUpdateModel((e) => !e);\r\n  };\r\n  const educationInitalValue = {\r\n    name: course.name,\r\n    place: course.place,\r\n    year: course.year,\r\n    branch: course.branch,\r\n    _id: course._id,\r\n  };\r\n  return (\r\n    <>\r\n      <div className={style.educationContainer}>\r\n        <div>\r\n          <span className={style.title}>{course.name}</span>\r\n          <p>{course.place}</p>\r\n          <span>{course.branch}</span>\r\n        </div>\r\n        <div>\r\n          {isAdmin && (\r\n            <div>\r\n              <AiOutlineDelete\r\n                color={colors.warning}\r\n                size={20}\r\n                onClick={() => {\r\n                  deleteHandler(course._id);\r\n                }}\r\n                className={style.icon}\r\n              />\r\n              <AiOutlineEdit\r\n                size={20}\r\n                onClick={updateModelHandler}\r\n                className={style.icon}\r\n                color={colors.primary}\r\n              />\r\n            </div>\r\n          )}\r\n          <span>\r\n            {course.year === '0' || !course.year ? 'running' : course.year}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      {isUpdateModel && (\r\n        <ModelComponent\r\n          title='Update Education'\r\n          closeHandler={updateModelHandler}\r\n          validationSchema={validationSchema}\r\n          initalValues={educationInitalValue}\r\n          submitHandler={updateHandler}>\r\n          {() => {\r\n            return (\r\n              <>\r\n                <MyTextInput\r\n                  name='name'\r\n                  label='Name'\r\n                  placeholder='Enter Name'\r\n                />\r\n                <MyTextInput\r\n                  name='place'\r\n                  label='Place'\r\n                  placeholder='Enter Place'\r\n                />\r\n                <MyTextInput\r\n                  name='year'\r\n                  label='Year'\r\n                  placeholder='Enter Year'\r\n                />\r\n                <MyTextInput\r\n                  name='branch'\r\n                  label='Branch'\r\n                  placeholder='Enter Branch'\r\n                />\r\n              </>\r\n            );\r\n          }}\r\n        </ModelComponent>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { lazy, Suspense } from 'react';\r\nimport ScreenTemplete from '../templetes/ScreenTemplete';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport EducationDetailsCompoent from '../components/EducationDetailsCompoent';\r\nimport LoadingComponent from '../components/LoadingComponent';\r\nimport MyTextInput from '../components/MyInputsCompoenent/MyTextInput';\r\nimport * as yup from 'yup';\r\nimport {\r\n  editEducationTitlePageAction,\r\n  createEducationAction,\r\n  editEducationAction,\r\n  deleteEducationAction,\r\n  educationFetchAction,\r\n} from '../store/actions/AdminActions';\r\nimport { createMessageAction } from '../store/actions/MessageActions';\r\n\r\nconst ModelComponent = lazy(() => import('../components/FormModelComponent'));\r\nexport default function EducationScreen() {\r\n  const [isPageEdit, setPageEdit] = React.useState(false);\r\n  const [isCreateModel, setCreateModel] = React.useState(false);\r\n  const { title, data } = useSelector((state) => state.admin.education);\r\n  const { isAdmin } = useSelector((state) => state.admin);\r\n  const colors = useSelector((state) => state.colors);\r\n  const dispatch = useDispatch();\r\n  const { isEducation } = useSelector((state) => state.load);\r\n\r\n  const pageValue = {\r\n    title: title ? title : '',\r\n  };\r\n  const initalValue = {\r\n    name: '',\r\n    place: '',\r\n    year: 0,\r\n    branch: '',\r\n  };\r\n  const validationSchema = yup.object({\r\n    name: yup.string().min(3).max(100).required(),\r\n    place: yup.string().min(4).max(100).required(),\r\n    year: yup.number().required('Year must be 0 or Number'),\r\n    branch: yup.string().min(2).max(100).required(),\r\n  });\r\n  const pageValidationSchema = yup.object({\r\n    title: yup.string().min(4).max(100).required(),\r\n  });\r\n  const pageModelToggler = () => {\r\n    setPageEdit((e) => !e);\r\n    return;\r\n  };\r\n  const createModelToggler = () => {\r\n    setCreateModel((e) => !e);\r\n    return;\r\n  };\r\n  const pageSubmitHandler = async (values, { setSubmitting }) => {\r\n    try {\r\n      setSubmitting(true);\r\n      await dispatch(editEducationTitlePageAction(values.title));\r\n      dispatch(createMessageAction('Successfully Updated!', 'warning'));\r\n      setSubmitting(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setSubmitting(false);\r\n      dispatch(createMessageAction('Something Went Wrong', 'error'));\r\n    }\r\n  };\r\n\r\n  const createHandler = async (values, { setSubmitting }) => {\r\n    try {\r\n      setSubmitting(true);\r\n      await dispatch(createEducationAction(values));\r\n\r\n      dispatch(createMessageAction('Successfully Created!', 'warning'));\r\n      setSubmitting(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(createMessageAction('Something Went Wrong', 'error'));\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const editHandler = async (values, { setSubmitting }) => {\r\n    try {\r\n      console.log(values);\r\n      setSubmitting(true);\r\n      await dispatch(editEducationAction(values));\r\n      dispatch(createMessageAction('Successfully Updated!', 'warning'));\r\n      setSubmitting(false);\r\n    } catch (error) {\r\n      console.log(error.response);\r\n      dispatch(createMessageAction('Something Went Wrong', 'error'));\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n  const deleteHandler = async (id) => {\r\n    let isConfirm = window.confirm('Are you sure?');\r\n    if (!isConfirm) {\r\n      return;\r\n    }\r\n    try {\r\n      await dispatch(deleteEducationAction(id));\r\n      dispatch(createMessageAction('Successfully Deleted!', 'warning'));\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(createMessageAction('Something Went Wrong', 'error'));\r\n    }\r\n  };\r\n  return (\r\n    <Suspense fallback={<LoadingComponent />}>\r\n      <ScreenTemplete\r\n        isLoad={isEducation}\r\n        title={title}\r\n        editHandler={pageModelToggler}\r\n        isCreateButton\r\n        action={educationFetchAction}\r\n        createHandler={createModelToggler}>\r\n        {data.map((course) => {\r\n          return (\r\n            <EducationDetailsCompoent\r\n              colors={colors}\r\n              isAdmin={isAdmin}\r\n              key={course._id}\r\n              course={course}\r\n              validationSchema={validationSchema}\r\n              updateHandler={editHandler}\r\n              deleteHandler={deleteHandler}\r\n            />\r\n          );\r\n        })}\r\n        {isPageEdit && (\r\n          <ModelComponent\r\n            title='Edit Page'\r\n            closeHandler={pageModelToggler}\r\n            initalValues={pageValue}\r\n            validationSchema={pageValidationSchema}\r\n            submitHandler={pageSubmitHandler}>\r\n            {() => {\r\n              return (\r\n                <>\r\n                  <MyTextInput\r\n                    name='title'\r\n                    label='Title'\r\n                    placeholder='Enter Title'\r\n                  />\r\n                </>\r\n              );\r\n            }}\r\n          </ModelComponent>\r\n        )}\r\n        {isCreateModel && (\r\n          <ModelComponent\r\n            title='Add Education'\r\n            closeHandler={createModelToggler}\r\n            initalValues={initalValue}\r\n            validationSchema={validationSchema}\r\n            submitHandler={createHandler}>\r\n            {() => {\r\n              return (\r\n                <>\r\n                  <MyTextInput\r\n                    name='name'\r\n                    label='Name'\r\n                    placeholder='Enter Name'\r\n                  />\r\n                  <MyTextInput\r\n                    name='place'\r\n                    label='Place'\r\n                    placeholder='Enter Place'\r\n                  />\r\n                  <MyTextInput\r\n                    name='year'\r\n                    label='Year'\r\n                    placeholder='Enter Year'\r\n                  />\r\n                  <MyTextInput\r\n                    name='branch'\r\n                    label='Branch'\r\n                    placeholder='Enter Branch'\r\n                  />\r\n                </>\r\n              );\r\n            }}\r\n          </ModelComponent>\r\n        )}\r\n      </ScreenTemplete>\r\n    </Suspense>\r\n  );\r\n}\r\n"],"sourceRoot":""}